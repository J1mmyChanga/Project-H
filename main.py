import asyncio
from lib import Lib
from keyboards import main_keyboard
from aiogram import Bot, Dispatcher, types

bot = Bot(token="5984577215:AAHqvZm2mjKfjRHjV0lAUU4PqdunHPSfYkU")
dp = Dispatcher(bot)

share_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
share_button = types.KeyboardButton(text="üìû –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω", request_contact=True)
share_keyboard.add(share_button)

from_action = {}


@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", reply_markup=main_keyboard)


@dp.message_handler(lambda message: message.text == "üè™ –ü—Ä–æ–¥—É–∫—Ç—ã")
async def products(message: types.Message):
    user_id = message.from_user.id
    from_action[user_id] = 2

    await message.answer("‚òéÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º", reply_markup=share_keyboard)


@dp.message_handler(lambda message: message.text == "üßà –†–µ—Ü–µ–ø—Ç")
async def recipe(message: types.Message):
    user_id = message.from_user.id
    from_action[user_id] = 1

    await message.answer("‚òéÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º", reply_markup=share_keyboard)


@dp.message_handler(content_types=types.ContentType.CONTACT)
async def phone(message: types.Message):
    number = "+" + message.contact.phone_number

    user_id = Lib.get_user_by_phone(number)

    get = Lib.get_last_recipe_request(int(user_id))

    if from_action[message.from_user.id] == 1:
        await message.answer(get["cooking"], reply_markup=main_keyboard)
    else:
        await message.answer(get["products"], reply_markup=main_keyboard)


async def main():
    await dp.start_polling()


if __name__ == "__main__":
    asyncio.run(main())
